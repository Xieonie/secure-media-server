# Docker Compose Override Example
# Copy this file to docker-compose.override.yml and customize as needed
# This file allows you to override or extend the main docker-compose.yml

version: '3.8'

services:
  # Example: Override Jellyfin with custom settings
  jellyfin:
    environment:
      # Custom environment variables
      - JELLYFIN_PublishedServerUrl=https://jellyfin.yourdomain.com
    volumes:
      # Additional volume mounts
      - /path/to/additional/media:/additional-media:ro
    deploy:
      resources:
        limits:
          # Increase memory limit for 4K transcoding
          memory: 4G
        reservations:
          memory: 2G

  # Example: Enable hardware acceleration for Jellyfin
  # jellyfin:
  #   devices:
  #     - /dev/dri:/dev/dri  # Intel Quick Sync
  #     - /dev/nvidia0:/dev/nvidia0  # NVIDIA GPU
  #   environment:
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility

  # Example: Override qBittorrent with VPN
  qbittorrent:
    depends_on:
      - vpn
    network_mode: "service:vpn"
    # Remove ports section since it will use VPN container's network

  # Example: Add VPN container for torrent traffic
  vpn:
    image: dperson/openvpn-client:latest
    container_name: vpn
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - VPN_AUTH=${VPN_USERNAME};${VPN_PASSWORD}
    volumes:
      - ./config/vpn:/vpn:ro
    ports:
      - "8080:8080"  # qBittorrent web UI through VPN
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add Tautulli for Plex/Jellyfin monitoring
  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/tautulli:/config
      - ./logs/jellyfin:/logs:ro
    ports:
      - "8181:8181"
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add Overseerr for media requests
  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/overseerr:/config
    ports:
      - "5055:5055"
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add Bazarr for subtitle management
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/bazarr:/config
      - ${MEDIA_ROOT}/movies:/movies
      - ${MEDIA_ROOT}/tv:/tv
    ports:
      - "6767:6767"
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add Jackett as alternative to Prowlarr
  # jackett:
  #   image: lscr.io/linuxserver/jackett:latest
  #   container_name: jackett
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ./config/jackett:/config
  #     - ${DOWNLOADS_ROOT}:/downloads
  #   ports:
  #     - "9117:9117"
  #   restart: unless-stopped
  #   networks:
  #     - media-network

  # Example: Add Lidarr for music management
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/lidarr:/config
      - ${MEDIA_ROOT}/music:/music
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - "8686:8686"
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add Readarr for book management
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/readarr:/config
      - ${MEDIA_ROOT}/books:/books
      - ${DOWNLOADS_ROOT}:/downloads
    ports:
      - "8787:8787"
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add Organizr for unified dashboard
  organizr:
    image: organizr/organizr:latest
    container_name: organizr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./config/organizr:/config
    ports:
      - "9983:80"
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add custom monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - media-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - media-network

  # Example: Add Portainer for container management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    restart: unless-stopped
    networks:
      - media-network

volumes:
  prometheus_data:
  grafana_data:
  portainer_data:

# Example: Additional networks
# networks:
#   vpn-network:
#     driver: bridge
#   monitoring-network:
#     driver: bridge